<project name="EasyMock" default="all" basedir=".">

	<target name="init">
		<tstamp />
		<property name="today" value="${TODAY}" />
		<property name="easymock.version" value="1.2_Java1.3" />
		<property name="distribution name" value="easymock${easymock.version}" />

		<property name="source directory" value="src" />
		<property name="documentation directory" value="doc" />
		<property name="library directory" value="lib" />

		<property name="junit jar" value="${library directory}/junit.jar" />
		<property name="clover jar" value="${library directory}/clover.jar" />
		
		<property name="temp directory" value="tmp" />
		<property name="clover build directory" value="${temp directory}/bin-clover" />
		<property name="clover report directory" value="${temp directory}/clover" />

		<property file="${user.home}/easymockbuild.properties" />
		<property name="java 1.3" value="/System/Library/Frameworks/JavaVM.framework/Versions/1.3/Commands/java" />
		<property name="java 1.4" value="/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Commands/java" />
		<property name="java 1.5" value="" />
		<property name="java compiler" value="/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Commands/javac" />
	</target>

	<target name="clean" depends="init">
		<delete dir="${temp directory}" />
	</target>

	<target name="junitexists?" depends="init">
		<available file="${junit jar}" property="junitexists!" />
	</target>

	<target name="checkforjunit" depends="junitexists?" unless="junitexists!">
		<echo message="${junit jar} missing. Please copy the junit.jar of JUnit 3.8.1 to ./${junit jar}!" />
		<fail message="${junit jar} missing. Please copy the junit.jar of JUnit 3.8.1 to ./${junit jar}!" />
	</target>

	<target name="copy" depends="init">
		<filter token="version" value="${easymock.version}" />
		<filter token="date" value="${today}" />

		<mkdir dir="${temp directory}"/>
		<mkdir dir="${clover build directory}"/>
		
		<copy todir="${temp directory}" filtering="on">
			<fileset dir="${source directory}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${documentation directory}">
				<include name="*.css" />
				<include name="*.txt" />
				<include name="*.html" />
			</fileset>
		</copy>
	</target>

	<target name="build" depends="checkforjunit, copy">
		<javac srcdir="${temp directory}" destdir="${temp directory}" executable="${java compiler}" fork="yes" debug="on" source="1.3" target="1.3">
			<classpath path="${junit jar};${temp directory}" />
		</javac>
	</target>

	<target name="javadoc" depends="copy">
		<javadoc packagenames="org.easymock" excludepackagenames="org.easymock.tests;org.easymock.samples;org.easymock.internal" sourcepath="${source directory}" classpath="${junit jar};${source directory}" access="protected" destdir="${temp directory}/javadoc" windowtitle="EasyMock">
			<bottom>
				<![CDATA[<i>Copyright &#169; 2001-2005 OFFIS. This documentation is provided under the terms of the MIT licence.</i>]]></bottom>
	</javadoc>
</target>

<target name="pack distribution" depends="build">
	<jar jarfile="${temp directory}/easymock.jar" basedir="${temp directory}" includes="org/easymock/*.class org/easymock/internal/*.class" />
	<zip zipfile="${temp directory}/tests.zip" basedir="${temp directory}" includes="**/tests/*.class **/tests/*.java" />
	<zip zipfile="${temp directory}/samples.zip" basedir="${temp directory}" includes="**/samples/*.class **/samples/*.java" />
	<zip zipfile="${temp directory}/src.zip" basedir="${temp directory}" includes="org/easymock/*.java org/easymock/internal/*.java" />
	<zip zipfile="${distribution name}.zip">
		<zipfileset dir="${temp directory}" includes="javadoc/**/*.*" prefix="${distribution name}" />
		<zipfileset dir="${temp directory}" includes="*.css" prefix="${distribution name}/" />
		<zipfileset dir="${temp directory}" includes="*.txt" prefix="${distribution name}/" />
		<zipfileset dir="${temp directory}" includes="*.html" prefix="${distribution name}/" />
		<zipfileset dir="${temp directory}" includes="clover/**/*.*" prefix="${distribution name}/" />
		<zipfileset dir="${temp directory}" includes="*.jar" prefix="${distribution name}/" />
		<zipfileset dir="${temp directory}" includes="*.zip" prefix="${distribution name}/" />
	</zip>
</target>

<target name="test distribution 1.3" depends="pack distribution">
	<junit fork="on" haltonfailure="on" printsummary="true" jvm="${java 1.3}">
		<classpath path="${junit jar};${temp directory}/easymock.jar;${temp directory}/tests.zip" />
		<test name="org.easymock.tests.AllTests" />
	</junit>
</target>

<target name="test distribution 1.4" depends="pack distribution">
	<junit fork="on" haltonfailure="on" printsummary="true" jvm="${java 1.4}">
		<classpath path="${junit jar};${temp directory}/easymock.jar;${temp directory}/tests.zip" />
		<test name="org.easymock.tests.AllTests" />
	</junit>
</target>

<target name="test distribution" depends="test distribution 1.3, test distribution 1.4">
</target>

<target name="all" depends="clean, build, javadoc, (clover), pack distribution, test distribution">
<antcall target="clean" />
</target>

<taskdef resource="clovertasks" />

<target name="(clover)" depends="(init clover), (build for clover), (test clover), (clover html), (check full coverage),(delete clover build)">
</target>

<target name="(build for clover)" depends="checkforjunit, copy">
	<javac srcdir="${temp directory}" destdir="${clover build directory}" executable="${java compiler}" fork="yes" debug="on" source="1.3" target="1.3">
		<classpath path="${junit jar};${temp directory};${clover jar}" />
	</javac>
</target>

<target name="(init clover)">
	<clover-setup initString="${temp directory}/coverage.db" />
</target>

<target name="(test clover)" depends="init, (build for clover)">
	<junit fork="on" haltonfailure="on" printsummary="true" jvm="${java 1.4}">
		<classpath path="${clover build directory};${junit jar};${clover jar}" />
		<test name="org.easymock.tests.AllTests" />
	</junit>
</target>

<target name="(clover html)" depends="(init clover)">
	<clover-report>
		<current summary="true" title="EasyMock ${easymock.version}" titleAnchor="http://www.easymock.org" outfile="${clover report directory}">
			<format type="html" showEmpty="true" />
			<fileset dir="${temp directory}" includes="org/easymock/*.java org/easymock/internal/*.java" />
		</current>
	</clover-report>
</target>

<target name="(check full coverage)" depends="(init clover)">
	<clover-check target="0%" haltonfailure="true">
		<package name="org.easymock" target="100%" />
		<package name="org.easymock.internal" target="100%" />
	</clover-check>
</target>
	
<target name="(delete clover build)" depends="init">
	<delete dir="${clover build directory}" />
</target>

</project>
